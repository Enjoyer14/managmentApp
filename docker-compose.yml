version: '3.8'

services:
  backend:
    build:
      context: ./backend                 # Корень проекта
      dockerfile: Dockerfile      # Dockerfile находится в корне
    container_name: backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/managmentapp
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=ittimetovenom53
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  frontend:
    build:
      context: ./frontend         # Путь к фронтенду
      dockerfile: Dockerfile
    container_name: frontend
    networks:
      - app-network
    restart: always

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: always

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    container_name: database
    environment:
      - POSTGRES_DB=managmentapp
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=ittimetovenom53
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge